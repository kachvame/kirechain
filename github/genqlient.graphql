query GetRepositories(
    $login: String!,
    # @genqlient(omitempty: true)
    $cursor: String
) {
    organization(login: $login) {
        repositories(first: 100, after: $cursor) {
            # @genqlient(flatten: true)
            nodes {
                ...RepositoryNode
            },
            pageInfo {
                endCursor,
                hasNextPage
            }
        }
    },
}

query GetCommitsOfBranchByAuthor(
    $owner: String!,
    $repository: String!,
    $branch: String!,
    $emails: [String!]!,
    # @genqlient(omitempty: true)
    $cursor: String
) {
    repository(owner: $owner, name: $repository) {
        ref(qualifiedName: $branch) {
            # @genqlient(flatten: true)
            target {
                ...History
            }
        }
    }
}

fragment CommitNode on Commit {
    author {
        name,
        email
    },
    message
}

query GetPRs(
    $owner: String!,
    $repository: String!,
    # @genqlient(omitempty: true)
    $cursor: String
) {
    repository(owner: $owner, name: $repository) {
        pullRequests(first: 100, after: $cursor) {
            nodes {
                number
            },
            pageInfo {
                endCursor,
                hasNextPage
            }
        }
    }
}

query GetCommitsInPR(
    $owner: String!,
    $repository: String!,
    $number: Int!,
    # @genqlient(omitempty: true)
    $cursor: String,
) {
    repository(owner: $owner, name: $repository) {
        pullRequest(number: $number) {
            commits(first: 100, after: $cursor) {
                nodes {
                    # @genqlient(flatten: true)
                    commit {
                        ...CommitNode
                    }
                },
                pageInfo {
                    endCursor,
                    hasNextPage
                }
            }
        }
    }
}

fragment RepositoryNode on Repository {
    id,
    name
}

fragment History on GitObject {
    ... on Commit {
        history(first: 100, after: $cursor, author: { emails: $emails }) {
            # @genqlient(flatten: true)
            nodes {
                ...CommitNode
            },
            pageInfo {
                endCursor,
                hasNextPage
            },
            totalCount
        }
    }
}
